apiVersion: skaffold/v4beta2
kind: Config
build:
  artifacts:
    # image tags are relative; to specify an image repo (e.g. GCR), you
    # must provide a "default repo" using one of the methods described
    # here:
    # https://skaffold.dev/docs/concepts/#image-repository-handling
    # that's out of date. Try: https://skaffold.dev/docs/environment/image-registries/

    # - image: accountingservice
    #   docker:
    #     dockerfile: src/accountingservice/Dockerfile
    # - image: adservice
    #   docker:
    #     dockerfile: src/adservice/Dockerfile
    # - image: cartservice
    #   docker:
    #     dockerfile: src/cartservice/src/Dockerfile
    # - image: checkoutservice
    #   docker:
    #     dockerfile: src/checkoutservice/Dockerfile
    # - image: currencyservice
    #   context: src/currencyservice
    #   docker:
    #     dockerfile: src/currencyservice/Dockerfile
    # - image: emailservice
    #   context: src/emailservice
    #   docker:
    #     dockerfile: src/emailservice/Dockerfile
    # - image: featureflagservice
    #   docker:
    #     dockerfile: src/featureflagservice/Dockerfile
    # - image: frauddetectionservice
    #   docker:
    #     dockerfile: src/frauddetectionservice/Dockerfile
    - image: frontend
      docker:
        dockerfile: src/frontend/Dockerfile
    # - image: frontendproxy
    #   docker:
    #     dockerfile: src/frontendproxy/Dockerfile
    # - image: loadgenerator
    #   docker:
    #     dockerfile: src/loadgenerator/Dockerfile
    # - image: paymentservice
    #   docker:
    #     dockerfile: src/paymentservice/Dockerfile
    # - image: productcatalogservice
    #   docker:
    #     dockerfile: src/productcatalogservice/Dockerfile
    # - image: quoteservice
    #   docker:
    #     dockerfile: src/quoteservice/Dockerfile
    # - image: recommendationservice
    #   docker:
    #     dockerfile: src/recommendationservice/Dockerfile
    # Issue with Target Platform and Build Platform build args.
    # - image: shippingservice
    #   docker:
    #     dockerfile: src/shippingservice/Dockerfile
  tagPolicy:
    inputDigest: {}
  local:
    useBuildkit: false
    concurrency: 1
portForward:
  - resourceType: service
    resourceName: workshop-release-frontendproxy
    namespace: default
    port: 8080
deploy:
  helm:
    releases:
      - name: otel-demo
        repo: https://open-telemetry.github.io/opentelemetry-helm-charts
        remoteChart: opentelemetry-demo
        version: "0.19.10"
        valuesFiles:
          - "../infra/otel-demo-helm/values.yaml"
        recreatePods: false
        skipBuildDependencies: false
        setValues:
          default:
            image:
              pullPolicy: IfNotPresent
        setValueTemplates:
          components.frontend.imageOverride.repository: "{{.IMAGE_REPO_frontend}}"
          components.frontend.imageOverride.tag: "{{.IMAGE_TAG_frontend}}@{{.IMAGE_DIGEST_frontend}}"
          # # components.adService.imageOverride.repository: "{{.IMAGE_REPO_adservice}}"
          # components.adService.imageOverride.tag: "1.3.1-adservice"
          # # components.accountingService.imageOverride.repository: "{{.IMAGE_REPO_accountingservice}}"
          # components.accountingService.imageOverride.tag: "1.3.1-accountingservice"
          # # components.cartService.imageOverride.repository: "{{.IMAGE_REPO_cartservice}}"
          # components.cartService.imageOverride.tag: "1.3.1-cartservice"
          # # components.checkoutService.imageOverride.repository: "{{.IMAGE_REPO_checkoutservice}}"
          # components.checkoutService.imageOverride.tag: "1.3.1-checkoutservice"
          # # components.currencyService.imageOverride.repository: "{{.IMAGE_REPO_currencyservice}}"
          # components.currencyService.imageOverride.tag: "1.3.1-currencyservice"
          # # components.emailService.imageOverride.repository: "{{.IMAGE_REPO_emailservice}}"
          # components.emailService.imageOverride.tag: "1.3.1-emailservice"
          # # components.frauddetectionService.imageOverride.repository: "{{.IMAGE_REPO_frauddetectionservice}}"
          # components.frauddetectionService.imageOverride.tag: "1.3.1-frauddetectionservice"
          # # components.frontendProxy.imageOverride.repository: "{{.IMAGE_REPO_frontendproxy}}"
          # components.frontendProxy.imageOverride.tag: "1.3.1-frontendproxy"
          # # components.featureflagService.imageOverride.repository: "{{.IMAGE_REPO_featureflagservice}}"
          # components.featureflagService.imageOverride.tag: "1.3.1-featureflagservice"
          # # components.loadgenerator.imageOverride.repository: "{{.IMAGE_REPO_loadgenerator}}"
          # components.loadgenerator.imageOverride.tag: "1.3.1-loadgenerator"
          # # components.recommendationService.imageOverride.repository: "{{.IMAGE_REPO_recommendationservice}}"
          # components.recommendationService.imageOverride.tag: "1.3.1-recommendationservice"
          # # components.quoteService.imageOverride.repository: "{{.IMAGE_REPO_quoteservice}}"
          # components.quoteService.imageOverride.tag: "1.3.1-quoteservice"
          # # components.productCatalogService.imageOverride.repository: "{{.IMAGE_REPO_productcatalogservice}}"
          # components.productCatalogService.imageOverride.tag: "1.3.1-productcatalogservice"
          # # components.paymentService.imageOverride.repository: "{{.IMAGE_REPO_paymentservice}}"
          # components.paymentService.imageOverride.tag: "1.3.1-paymentservice"
          # # components.shippingService.imageOverride.repository: "{{.IMAGE_REPO_shippingservice}}"
          # components.shippingService.imageOverride.tag: "1.3.1-shippingservice"
        upgradeOnChange: true
        useHelmSecrets: false
        wait: false # if i change this to true, will it prompt me?
